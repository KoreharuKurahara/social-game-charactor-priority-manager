/**
 * Á∞°Âçò„Å™„ÉÜ„Çπ„ÉàÈñ¢Êï∞
 * „Ç®„É©„Éº„ÇíÈÅø„Åë„Å¶Âü∫Êú¨Ê©üËÉΩ„Çí„ÉÜ„Çπ„Éà
 */

/**
 * ÊúÄ„ÇÇÂü∫Êú¨ÁöÑ„Å™„ÉÜ„Çπ„Éà
 */
function runSimpleTest() {
  Logger.log('=== Á∞°Âçò„ÉÜ„Çπ„ÉàÈñãÂßã ===');
  
  var results = {
    tests: 0,
    passed: 0,
    failed: 0
  };
  
  // „ÉÜ„Çπ„Éà1: Áí∞Â¢ÉË®≠ÂÆö
  Logger.log('1. Áí∞Â¢ÉË®≠ÂÆö„ÉÜ„Çπ„Éà');
  results.tests++;
  try {
    var spreadsheetId = EnvConfig.getSpreadsheetId();
    Logger.log('‚úÖ „Çπ„Éó„É¨„ÉÉ„Éâ„Ç∑„Éº„ÉàIDÂèñÂæóÊàêÂäü: ' + spreadsheetId.substring(0, 8) + '...');
    results.passed++;
  } catch (error) {
    Logger.log('‚ùå Áí∞Â¢ÉË®≠ÂÆö„Ç®„É©„Éº: ' + error.message);
    results.failed++;
  }
  
  // „ÉÜ„Çπ„Éà2: „Çπ„Éó„É¨„ÉÉ„Éâ„Ç∑„Éº„ÉàÊé•Á∂ö
  Logger.log('');
  Logger.log('2. „Çπ„Éó„É¨„ÉÉ„Éâ„Ç∑„Éº„ÉàÊé•Á∂ö„ÉÜ„Çπ„Éà');
  results.tests++;
  try {
    var spreadsheet = getSpreadsheet();
    Logger.log('‚úÖ „Çπ„Éó„É¨„ÉÉ„Éâ„Ç∑„Éº„ÉàÊé•Á∂öÊàêÂäü: ' + spreadsheet.getName());
    results.passed++;
  } catch (error) {
    Logger.log('‚ùå „Çπ„Éó„É¨„ÉÉ„Éâ„Ç∑„Éº„ÉàÊé•Á∂ö„Ç®„É©„Éº: ' + error.message);
    results.failed++;
  }
  
  // „ÉÜ„Çπ„Éà3: „Éá„Éº„ÇøÂèñÂæó
  Logger.log('');
  Logger.log('3. „Éá„Éº„ÇøÂèñÂæó„ÉÜ„Çπ„Éà');
  results.tests++;
  try {
    var characters = SpreadsheetService.getAllCharacters();
    Logger.log('‚úÖ ÂÖ®„Ç≠„É£„É©„ÇØ„Çø„ÉºÂèñÂæóÊàêÂäü: ' + characters.length + '‰Ωì');
    
    var unowned = SpreadsheetService.getUnownedCharacters();
    Logger.log('‚úÖ Êú™ÊâÄÊåÅ„Ç≠„É£„É©„ÇØ„Çø„ÉºÂèñÂæóÊàêÂäü: ' + unowned.length + '‰Ωì');
    results.passed++;
  } catch (error) {
    Logger.log('‚ùå „Éá„Éº„ÇøÂèñÂæó„Ç®„É©„Éº: ' + error.message);
    results.failed++;
  }
  
  // „ÉÜ„Çπ„Éà4: Áµ±Ë®àÊÉÖÂ†±
  Logger.log('');
  Logger.log('4. Áµ±Ë®àÊÉÖÂ†±„ÉÜ„Çπ„Éà');
  results.tests++;
  try {
    var stats = CharacterService.getStatistics();
    Logger.log('‚úÖ Áµ±Ë®àÊÉÖÂ†±ÂèñÂæóÊàêÂäü:');
    Logger.log('  Á∑èÊï∞: ' + stats.total);
    Logger.log('  ÊâÄÊåÅÊ∏à„Åø: ' + stats.owned);
    Logger.log('  Êú™ÊâÄÊåÅ: ' + stats.unowned);
    Logger.log('  ÂÑ™ÂÖàÂ∫¶Ë®≠ÂÆöÊ∏à„Åø: ' + stats.priorities.set);
    results.passed++;
  } catch (error) {
    Logger.log('‚ùå Áµ±Ë®àÊÉÖÂ†±„Ç®„É©„Éº: ' + error.message);
    results.failed++;
  }
  
  // „ÉÜ„Çπ„Éà5: WebApp API
  Logger.log('');
  Logger.log('5. WebApp API„ÉÜ„Çπ„Éà');
  results.tests++;
  try {
    var apiStats = getStatistics();
    Logger.log('‚úÖ APIÁµ±Ë®àÊÉÖÂ†±ÂèñÂæóÊàêÂäü');
    
    var characters = getUnownedCharactersWithOptions({});
    Logger.log('‚úÖ API„Ç≠„É£„É©„ÇØ„Çø„ÉºÂèñÂæóÊàêÂäü: ' + characters.length + '‰Ωì');
    results.passed++;
  } catch (error) {
    Logger.log('‚ùå WebApp API„Ç®„É©„Éº: ' + error.message);
    results.failed++;
  }
  
  // „ÉÜ„Çπ„Éà6: UIController
  Logger.log('');
  Logger.log('6. UIController„ÉÜ„Çπ„Éà');
  results.tests++;
  try {
    var dashboardData = getDashboardData();
    Logger.log('‚úÖ „ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ„Éá„Éº„ÇøÂèñÂæóÊàêÂäü');
    Logger.log('  ÂÆå‰∫ÜÁéá: ' + dashboardData.overview.completionRate + '%');
    
    var paginatedData = getCharactersWithPagination({ page: 1, pageSize: 5 });
    Logger.log('‚úÖ „Éö„Éº„Ç∏„Éç„Éº„Ç∑„Éß„É≥ÂèñÂæóÊàêÂäü: ' + paginatedData.characters.length + '‰Ωì');
    results.passed++;
  } catch (error) {
    Logger.log('‚ùå UIController„Ç®„É©„Éº: ' + error.message);
    results.failed++;
  }
  
  // ÁµêÊûú„Çµ„Éû„É™„Éº
  Logger.log('');
  Logger.log('=== Á∞°Âçò„ÉÜ„Çπ„ÉàÁµêÊûú ===');
  Logger.log('Á∑è„ÉÜ„Çπ„ÉàÊï∞: ' + results.tests);
  Logger.log('ÊàêÂäü: ' + results.passed + ' (' + Math.round(results.passed / results.tests * 100) + '%)');
  Logger.log('Â§±Êïó: ' + results.failed + ' (' + Math.round(results.failed / results.tests * 100) + '%)');
  
  if (results.failed === 0) {
    Logger.log('');
    Logger.log('üéâ ÂÖ®„Å¶„ÅÆ„ÉÜ„Çπ„Éà„ÅåÊàêÂäü„Åó„Åæ„Åó„ÅüÔºÅ');
    Logger.log('‚ú® „Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÅØÊ≠£Â∏∏„Å´Âãï‰Ωú„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ');
  } else {
    Logger.log('');
    Logger.log('‚ö†Ô∏è  ‰∏ÄÈÉ®„ÅÆ„ÉÜ„Çπ„Éà„ÅåÂ§±Êïó„Åó„Åæ„Åó„Åü„ÄÇ');
  }
  
  return results;
}

/**
 * Ë∂ÖÁ∞°Âçò„ÉÜ„Çπ„ÉàÔºàÊúÄ‰ΩéÈôêÔºâ
 */
function runMinimalTest() {
  Logger.log('=== ÊúÄÂ∞èÈôê„ÉÜ„Çπ„Éà ===');
  
  try {
    // 1. Êé•Á∂öÁ¢∫Ë™ç
    var spreadsheet = getSpreadsheet();
    Logger.log('‚úÖ Êé•Á∂öOK: ' + spreadsheet.getName());
    
    // 2. „Éá„Éº„ÇøÁ¢∫Ë™ç
    var characters = SpreadsheetService.getUnownedCharacters();
    Logger.log('‚úÖ „Éá„Éº„ÇøOK: ' + characters.length + '‰Ωì');
    
    // 3. APIÁ¢∫Ë™ç
    var stats = getStatistics();
    Logger.log('‚úÖ API OK: Á∑èÊï∞' + stats.total);
    
    Logger.log('');
    Logger.log('üéâ ÊúÄÂ∞èÈôê„ÉÜ„Çπ„ÉàÊàêÂäüÔºÅÂü∫Êú¨Ê©üËÉΩ„ÅØÂãï‰Ωú„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ');
    return true;
    
  } catch (error) {
    Logger.log('‚ùå ÊúÄÂ∞èÈôê„ÉÜ„Çπ„ÉàÂ§±Êïó: ' + error.message);
    return false;
  }
}

/**
 * Ê©üËÉΩÂà•„ÉÜ„Çπ„Éà
 */
function testDataAccess() {
  Logger.log('=== „Éá„Éº„Çø„Ç¢„ÇØ„Çª„Çπ„ÉÜ„Çπ„Éà ===');
  
  try {
    // SpreadsheetService
    var validation = SpreadsheetService.validateSpreadsheetStructure();
    Logger.log('ÊßãÈÄ†Ê§úË®º: ' + (validation.isValid ? '‚úÖ OK' : '‚ùå NG'));
    
    var allChars = SpreadsheetService.getAllCharacters();
    Logger.log('ÂÖ®„Ç≠„É£„É©„ÇØ„Çø„Éº: ‚úÖ ' + allChars.length + '‰Ωì');
    
    var unownedChars = SpreadsheetService.getUnownedCharacters();
    Logger.log('Êú™ÊâÄÊåÅ„Ç≠„É£„É©„ÇØ„Çø„Éº: ‚úÖ ' + unownedChars.length + '‰Ωì');
    
    return true;
  } catch (error) {
    Logger.log('‚ùå „Éá„Éº„Çø„Ç¢„ÇØ„Çª„Çπ„Ç®„É©„Éº: ' + error.message);
    return false;
  }
}

function testCharacterServices() {
  Logger.log('=== „Ç≠„É£„É©„ÇØ„Çø„Éº„Çµ„Éº„Éì„Çπ„ÉÜ„Çπ„Éà ===');
  
  try {
    // CharacterService
    var stats = CharacterService.getStatistics();
    Logger.log('Áµ±Ë®àÊÉÖÂ†±: ‚úÖ Á∑èÊï∞' + stats.total);
    
    var filtered = CharacterService.getUnownedCharactersWithOptions({ attribute: '„Ç¢„ÇØ„ÉÜ„Ç£„Éñ' });
    Logger.log('„Éï„Ç£„É´„ÇøÊ©üËÉΩ: ‚úÖ „Ç¢„ÇØ„ÉÜ„Ç£„Éñ' + filtered.length + '‰Ωì');
    
    var search = CharacterService.searchCharacters('„Çµ„Éº„Éê„É´');
    Logger.log('Ê§úÁ¥¢Ê©üËÉΩ: ‚úÖ "„Çµ„Éº„Éê„É´"' + search.length + '‰Ωì');
    
    return true;
  } catch (error) {
    Logger.log('‚ùå „Ç≠„É£„É©„ÇØ„Çø„Éº„Çµ„Éº„Éì„Çπ„Ç®„É©„Éº: ' + error.message);
    return false;
  }
}

function testUIController() {
  Logger.log('=== UIController„ÉÜ„Çπ„Éà ===');
  
  try {
    // UIController
    var dashboard = getDashboardData();
    Logger.log('„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ: ‚úÖ ÂÆå‰∫ÜÁéá' + dashboard.overview.completionRate + '%');
    
    var paginated = getCharactersWithPagination({ page: 1, pageSize: 10 });
    Logger.log('„Éö„Éº„Ç∏„Éç„Éº„Ç∑„Éß„É≥: ‚úÖ ' + paginated.characters.length + '‰Ωì/„Éö„Éº„Ç∏');
    
    if (paginated.characters.length > 0) {
      var details = getCharacterDetails(paginated.characters[0].id);
      Logger.log('„Ç≠„É£„É©„ÇØ„Çø„ÉºË©≥Á¥∞: ‚úÖ ' + details.character.name);
    }
    
    return true;
  } catch (error) {
    Logger.log('‚ùå UIController„Ç®„É©„Éº: ' + error.message);
    return false;
  }
}